5절. 연산자

연산자
산술연산 : + - * / // % **
산술연산 : = += -= *= /= //= %=
논리연산 : & 뭉 | ㅐㄱ ㅜㅐㅅ
비교연산 : > >= < <= == !=
비트연산 : & | ^
&와 |은 비교 연산자보다 우선순위가 높다.


6절. 문자다루기
문자열 슬라이싱 변수[from:stop:step]
len(문자열변수) : 문자 갯수
upper() : 대문자로
lower() : 소문자로
title() : 각 어절의 첫 글자만 대문자로
capitalize : 첫 문자만 대문자로
count('찾을 문자열') : 찾을 문자열이 몇개 들어있는지 갯수 반환
find('찾을 문자열') : 찾을 문자열이 왼쪽부터 시작하여 몇 번째 인덱스에 있는지 인덱스를 반환
rfind('찾을 문자열") : 찾을 문자열이 오른쪽부터 시작하여 몇 번째 인덱스에 있는지 인덱스를 반환
  **찾을 문자열이 없으면 -1을 반환**
cf) index('찾을 문자열') : 찾을 문자열의 인덱스를 반환, 찾을 문자열이 없으면 오류 발생
startswith('특정 문자열') : 특정 문자열로 시작하는지 여부를 확인하여 true or false 반환
endswith('특정 문자열') : 특정 문자열로 끝나는지 여부를 확인하여 true or false 반환
strip() : 좌우 공백 제거
rstrip() : 오른쪽 공백만 제거
lstrip() : 왼쪽 공백만 제거
isdigit() : 문자열이 숫자 문자열인지 여부 반환 "10" true "10점" false
islower() : 소문자 문자열인지 여부 반환
isupper() : 대문자 문자열인지 여부 반환
replace(oldstr, newstr) :oldstr을 newstr로 변경
split(구분자) : 구분자를 이용해 문자 분리(리스트반환)
join(리스트) : 리스트를 연결


7절 날짜시간
	특정시점 : datetime(년,월,일, 시, 분, 초) 
	지금시점 : datetime.now().date
	date(녀,월,일) / datetime.now().date()
	time(시,분,초) / datetime.now().time()

